金曜2限荻田晴美先生のCプログラミング演習について補助解説＆演習の答えでも載せていこうかなと・・・
Cプロは私も初心者なので初心者の初心者による解説となります。(一応他言語はいくつかかじってます)
第1回
UNIXコマンド：これはプログラミングと関係ないです。1個も覚えなくてOK.
一応説明するなら、書いたプログラムをパソコンに読ますための指示の仕方のこと、と解釈すればいいよ。
知ってるとめちゃ便利だけど、プログラミング初心者ですなんて人がみたらむしろ混乱するからとりあえず無視でいいんじゃない？
必要なときはどこに何を打つのか指示するから今は飛ばしちゃえ～。

第2回
まーだコマンドの話してる(笑)　いらんいらん。　スライド11まで飛ぶぞ！
テキストエディタについて説明するね。
僕らはレポートを書くときWordを使うよね。テキストエディタというのはWordとほぼ同じです。プログラミング（つまりなんらかの内容＝レポート＝”テキスト”）をパソコンに読ませるにあたってのレポートを書くためのWordやレポート用紙みたいなののことです。
じゃあWordにプログラミングかけば？って思う人もいるかもしれないけど、プログラムは特定の形式のファイルでないとダメなんだ。
特定の形式って？ コースナビでさ、.docsや.pdfでの提出を指示されたことない？あれです。Wordで作ったファイルは.docsなんだけど、Cプロは.cっていう形式じゃないとダメなんだよね。この形式にしたいからWord以外を使いたいわけ。
さて、スライドでおススメされてるテキストエディタはPCルームのPCに最初から入っててまあいいんだけど、個人的にはなんだか使いにくいなって感じる。そう思わない人はこの段落はすっ飛ばして、ガンガンEmacsとか使ってあげて！僕はどうも肌に合わないのでAtomというテキストエディタを使ってるんだ。背景が黒で目に優しいし、自動的に変換候補を出してくれたり見やすいよう段落や文字の色を変えてくれ使いやすい。ほかにはどのWindows PCにも入っているであろうメモ帳も余計な機能がないから初心者にはいいかも。まあ長くなったがこれまでの話はレポートを書くに当たって紙派かWord派か一太郎派かみたいなもんだ。
本題。　スライド14
上部のhello.cはファイルの名前。名前はプログラミング(以降コードと略す)を書いてから保存するとき命名するから今は無視。
hello worldと画面に表示されるプログラムを書いてみよう。
まずは脳死で以下に従ってくれ。

＃＃脳死でやってみよう＃＃
part1 コーディング編
・テキストエディタを開く。
・以下のコードを書く。コピペしてもいいけどタイプミスに耐えながら移した方が練習になるんじゃないかな。

#include <stdio.h>

int main(void)
{
printf("hello, world\n");

return 0;
}

（スライドと同じ）

・ファイルの保存場所を作成する。Desktopで右クリック、新規作成から新しいフォルダーを作る。名前はなんでもいいけどここでは work にしよう。
・ファイルを保存する。ファイル名は hello.c 保存の仕方は Ctrl + s のショートカットキーがおすすめ。保存場所としてDesktopのworkを選択。
※　PCルームのPCを使っている人は work フォルダをUSBにコピペして保存しよう。ログアウトすると消去される。USBがない人はグーグルアカウントにログイン、グーグルドライブに保存。

part2 PCにコードを渡し、実行してもらう
・スライド通りやりたい人
  ・Linux, Mac:ターミナル, Windows:コマンドプロンプトを起動。
    　起動方法
    　Mac:finder → アプリケーション → ユーティリティ → ターミナル
    　Windows：画面左端、ウィンドウズのロゴをクリック → 「コマンドプロンプト」を探す
  ・以下を一行ずつ入力、Enterキーで実行
      cd Desktop
      cd work
      gcc hello.c
      ./a. out
・自分のPCで、かつcd Desktopとかいちいち打ちたくない人
  ・学習用C言語開発環境というアプリをダウンロード。この名前でググればでてくる。
  ・「プログラム」に #include以降マルコピして　プログラムを実行　をクリック。以降ファイルに書く内容はここに書いていけばいい。毎度全部消して新しく書くこと。

画面にhello worldと表示される。

＜概要＞
　Part1は普通にコーディングしています。
　part2では、この英単語もどきで書かれたファイルをパソコンが読めるように翻訳しています。パソコンが読めるように　とはコードを0101000001110001...0100111000のように2進数命令に変換することです。パソコンは0と1で動いているというのは聞いたことがあると思いますが、これのことですね。

＜解説＞
コードについて1行づつ解説しよう。
#include <stdio.h>
stdio.hというファイルを呼び出しています。このファイルにはprintfとはなにか？みたいなことが書いてあると思ってください。いわばパソコン用辞書です。
int main(void){ 内容 }
パソコンにしてほしい内容を書く部分です。
printf("hello, world\n");
printf で表示してくれと命令します。具体的内容は()の中に、”で囲って書きます。
実は、\nはなくていいです。\nは改行を示すもので、printfがいくつかあるときは改行されて見やすいですが今回は一行だから要りません。試しに、
#include <stdio.h>

int main(void)
{
printf("hello, world\n");
printf("hello, world\n");
printf("hello, world\n");
return 0;
}
と書き換えて再度実行してください。
hello, world
hello, world
hello, world
と出てきました。
次に、改行を意味する\nを抜いて書いてみましょう。
#include <stdio.h>

int main(void)
{
printf("hello, world");
printf("hello, world");
printf("hello, world");
return 0;
}
これで再度実行すると
hello, worldhello, worldhello, world
と表示されました。
確かに\nはそれがある場所で改行をさせることがわかりました。
実はプログラミングの勉強方法としてある単語を抜いたらどうなるのかを調べるのはよい勉強方法です。いろんな単語を抜いたり入れたりして比較してみてください。
return 0;
これは実は今回いらないです。なくてもコードはきちんと実行されます(コードを実行するというのをコードを走らせるともいいます。今後はこのようにも表現します)。
コードの説明はこれでおしまいです

Part2について
cd Desktop
これは、コマンドプロンプトが注目している場所の変更です。パソコンの"目線"は一段階ずつしか動かせないので、まずは読み込みたいファイルがあるフォルダがあるデスクトップに移動します。
cd work
workフォルダに移動します。
gcc hello.c
hello.cファイル(今回コードを書いたファイル)を、010110001...に変換。
./a. out
変換したファイルを実行。

以上です。スライド17以降はCプロと直接は関係ないです。お疲れ様でした。
